// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0
// source: delete_feed_follow.sql

package database

import (
	"context"

	"github.com/google/uuid"
)

const unfollow = `-- name: Unfollow :one
WITH url_to_unfollow as (
    SELECT
        feed_follows.id,
        feed_follows.user_id
    from feed
    inner join feed_follows
        on feed_follows.feed_id = feed.id
    where feed.url = $1
        and feed_follows.user_id = $2
)

DELETE FROM feed_follows
WHERE id = (select id from url_to_unfollow)
and user_id = (select user_id from url_to_unfollow)

RETURNING id, created_at, updated_at, user_id, feed_id
`

type UnfollowParams struct {
	Url    string
	UserID uuid.UUID
}

func (q *Queries) Unfollow(ctx context.Context, arg UnfollowParams) (FeedFollow, error) {
	row := q.db.QueryRowContext(ctx, unfollow, arg.Url, arg.UserID)
	var i FeedFollow
	err := row.Scan(
		&i.ID,
		&i.CreatedAt,
		&i.UpdatedAt,
		&i.UserID,
		&i.FeedID,
	)
	return i, err
}
