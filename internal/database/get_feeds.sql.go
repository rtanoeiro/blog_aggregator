// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0
// source: get_feeds.sql

package database

import (
	"context"

	"github.com/google/uuid"
)

const getFeeds = `-- name: GetFeeds :many
select
    feed.name,
    feed.url,
    feed.user_id,
    users.name as username
from feed
inner join users
    on users.id = feed.user_id
`

type GetFeedsRow struct {
	Name     string
	Url      string
	UserID   uuid.UUID
	Username string
}

func (q *Queries) GetFeeds(ctx context.Context) ([]GetFeedsRow, error) {
	rows, err := q.db.QueryContext(ctx, getFeeds)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []GetFeedsRow
	for rows.Next() {
		var i GetFeedsRow
		if err := rows.Scan(
			&i.Name,
			&i.Url,
			&i.UserID,
			&i.Username,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
