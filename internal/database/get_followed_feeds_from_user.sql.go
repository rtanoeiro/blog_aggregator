// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0
// source: get_followed_feeds_from_user.sql

package database

import (
	"context"

	"github.com/google/uuid"
)

const getFollowedFeedsFromUser = `-- name: GetFollowedFeedsFromUser :many
SELECT
    feed.id as feed_id,
    feed.name,
    feed.url,
    feed.user_id
FROM feed_follows
INNER JOIN feed
    ON feed.id = feed_follows.feed_id
WHERE feed_follows.user_id = $1
`

type GetFollowedFeedsFromUserRow struct {
	FeedID uuid.UUID
	Name   string
	Url    string
	UserID uuid.UUID
}

func (q *Queries) GetFollowedFeedsFromUser(ctx context.Context, userID uuid.UUID) ([]GetFollowedFeedsFromUserRow, error) {
	rows, err := q.db.QueryContext(ctx, getFollowedFeedsFromUser, userID)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []GetFollowedFeedsFromUserRow
	for rows.Next() {
		var i GetFollowedFeedsFromUserRow
		if err := rows.Scan(
			&i.FeedID,
			&i.Name,
			&i.Url,
			&i.UserID,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
